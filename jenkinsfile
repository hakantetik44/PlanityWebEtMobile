
pipeline {
    agent any

    tools {
        maven 'Maven 3.9.5'
        jdk 'JDK 17'
    }

    environment {
        MAVEN_OPTS = '-Xmx3072m -XX:MaxPermSize=512m'
        PROJECT_NAME = 'Radio BDD Automations Tests'
        TIMESTAMP = new Date().format('yyyy-MM-dd_HH-mm-ss')
        CUCUMBER_REPORTS = 'target/cucumber-reports'
        GIT_COMMIT_MSG = sh(script: 'git log -1 --pretty=%B', returnStdout: true).trim()
        GIT_AUTHOR = sh(script: 'git log -1 --pretty=%an', returnStdout: true).trim()
    }

    stages {
        stage('Initialize') {
            steps {
                script {
                    echo """
                        ╔══════════════════════════════════╗
                        ║      Test Automation Start       ║
                        ╚══════════════════════════════════╝

                        🚀 Framework: Cucumber BDD
                        📱 Platforms: Web & Mobile
                        🔧 Build Tool: Maven
                    """
                }

                // Clean workspace and checkout code
                cleanWs()
                checkout scm
            }
        }

        stage('Build & Dependencies') {
            steps {
                script {
                    echo """
                        ╔══════════════════════════════════╗
                        ║    Installing Dependencies       ║
                        ╚══════════════════════════════════╝
                    """
                }

                // Clean install with checkstyle verification
                sh """
                    mvn clean install -DskipTests
                    mvn checkstyle:check
                """
            }
        }

        stage('Test Execution') {
            steps {
                script {
                    try {
                        echo """
                            ╔══════════════════════════════════╗
                            ║        Running Tests             ║
                            ╚══════════════════════════════════╝
                        """

                        // Run tests with parallel execution
                        sh """
                            mvn test \
                            -Dmaven.test.failure.ignore=true \
                            -Dparallel=methods \
                            -DthreadCount=3 \
                            -Dcucumber.filter.tags="@web or @mobile" \
                            -Dcucumber.plugin="json:target/cucumber.json,html:target/cucumber-reports/html" \
                            | tee execution.log
                        """

                        // Generate Cucumber Reports
                        sh 'mvn verify -DskipTests'

                    } catch (Exception e) {
                        currentBuild.result = 'FAILURE'
                        throw e
                    }
                }
            }
            post {
                always {
                    // Archive test results and reports
                    archiveArtifacts artifacts: """
                        target/cucumber-reports/**/*,
                        target/cucumber.json,
                        target/screenshots/**/*,
                        execution.log
                    """, allowEmptyArchive: true

                    // Publish test results
                    cucumber buildStatus: 'UNSTABLE',
                            fileIncludePattern: '**/cucumber.json',
                            jsonReportDirectory: 'target'
                }
            }
        }
    }

    post {
        always {
            script {
                def testResults = ""
                if (fileExists('execution.log')) {
                    testResults = readFile('execution.log').trim()
                }

                echo """
                    ╔══════════════════════════════════╗
                    ║       Test Execution Summary     ║
                    ╚══════════════════════════════════╝

                    🏷️ Project: ${PROJECT_NAME}
                    ⏱️ Completed: ${new Date().format('dd/MM/yyyy HH:mm:ss')}
                    👤 Triggered by: ${GIT_AUTHOR}
                    📝 Commit message: ${GIT_COMMIT_MSG}

                    📊 Test Results:
                    ===============
                    ${testResults}

                    📋 Reports:
                    - Cucumber HTML Report: ${WORKSPACE}/target/cucumber-reports/html/index.html
                    - JSON Report: ${WORKSPACE}/target/cucumber.json

                    ${currentBuild.result == 'SUCCESS' ? '✅ Build Status: SUCCESS' : '❌ Build Status: FAILED'}
                """
            }
            // Cleanup workspace
            cleanWs()
        }
        success {
            echo """
                ✨ Test execution completed successfully!
                🔍 Check the Cucumber reports for detailed results.
            """
        }
        failure {
            echo """
                ❌ Test execution failed!
                🔍 Please check the logs and reports for details.
            """
        }
    }
}
